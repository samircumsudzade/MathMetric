conversion_dict = {
    "length":{
        "meters": {
            "meters": lambda x: x,
            "yards": lambda x: x * 1.0936,
            "feet": lambda x: x * 3.28084,
            "centimeters": lambda x: x * 100,
            "kilometers": lambda x: x * 0.001,
            "miles": lambda x: x * 0.000621371192,
            "hectometer": lambda x: x * 0.01,
            "decameter": lambda x: x * 0.1,
            "decimeter": lambda x: x * 10.0,
            "millimeter": lambda x: x * 1000.0,
            "micrometer": lambda x: x * 1000000,
            "nanometer": lambda x: x * 1000000000,
        },
        "yards": {
            "yards": lambda x: x,
            "meters": lambda x: x * 0.9144,
            "centimeters": lambda x: x * 91.44,
            "feet": lambda x: x * 3,
            "kilometers": lambda x: x * 0.0009144,
            "miles": lambda x: x * 0.000568181818,
            "hectometer": lambda x: x * 0.009144,
            "decameter": lambda x: x * 0.0914,
            "decimeter": lambda x: x * 9.14400,
            "millimeter": lambda x: x * 914.4,
            "micrometer": lambda x: x * 914400,
            "nanometer": lambda x: x * 914400000,
        },
        "centimeters": {
            "centimeters": lambda x: x,
            "meters": lambda x: x * 0.01,
            "yards": lambda x: x * 0.010936133,
            "feet": lambda x: x * 0.032808399,
            "kilometers":lambda x: x * 0.00001,
            "miles": lambda x: x * 6.21371192 * 10**(-6),
            "hectometer": lambda x: x * 0.0001,
            "decameter": lambda x: x * 0.001,
            "decimeter": lambda x: x * 0.1,
            "millimeter": lambda x: x * 10,
            "micrometer": lambda x: x * 10000,
            "nanometer": lambda x: x * 10000000,
        },
        "feet": {
            "feet": lambda x: x,
            "meters": lambda x:x * 0.3048,
            "yards": lambda x: x * 0.333333333,
            "centimeters": lambda x: x * 30.48,
            "kilometers": lambda x: x * 0.0003048,
            "miles": lambda x: x * 0.000189393939,
            "hectometer": lambda x: x * 0.003048,
            "decameter": lambda x: x * 0.03048,
            "decimeter": lambda x: x * 3.04800,
            "millimeter": lambda x: x * 304.8,
            "micrometer": lambda x: x * 304800,
            "nanometer": lambda x: x * 304800000,
        },
        "miles": {
            "miles": lambda x: x,
            "kilometers": lambda x: x * 1.60935,
            "meters": lambda x: x * 1.60935 *  1000,
            "centimeters": lambda x: x * 1.60935 *  1000 * 100,
            "feet": lambda x: x * 5280,
            "yards": lambda x: x * 5280 / 3.0,
            "hectometer": lambda x: x * 16.09350,
            "decameter": lambda x: x * 160.9350,
            "decimeter": lambda x: x * 16093.50,
            "millimeter": lambda x: x * 1609350,
            "micrometer": lambda x: x * 1609350000,
            "nanometer": lambda x: x * 1609350000000,
        },
        "kilometers": {
            "kilometers": lambda x: x,
            "meters": lambda x: x * 1000,
            "centimeters": lambda x: x * 1000 * 100,
            "miles": lambda x: x / 1.60934,
            "yards": lambda x: x * 1093.61,
            "feet": lambda x: x * 1093.61 * 3,
            "hectometer": lambda x: x * 10,
            "decameter": lambda x: x * 100,
            "decimeter": lambda x: x * 10000,
            "millimeter": lambda x: x * 1000000,
            "micrometer": lambda x: x * 1000000000,
            "nanometer": lambda x: x * 1000000000000,
        },
        "hectometer":{
            "hectometers":lambda x: x,
            "kilometers":lambda x: x * 0.1,
            "meters": lambda x: x * 100,
            "centimeters": lambda x: x * 10000,
            "miles": lambda x: x * 0.0621371192,
            "yards": lambda x: x * 109.36133,
            "feet": lambda x: x * 328.08399,
            "decameter": lambda x: x * 10,
            "decimeter": lambda x: x * 1000,
            "millimeter": lambda x: x * 100000,
            "micrometer": lambda x: x * 100000000,
            "nanometer": lambda x: x * 100000000000,
        },
        "decameter":{
            "decameter": lambda x: x,
            "kilometers": lambda x: x * 0.01,
            "meters": lambda x: x * 10,
            "centimeters": lambda x: x * 1000,
            "miles": lambda x: x * 0.00621371192,
            "yards": lambda x: x * 10.936133,
            "feet": lambda x: x * 32.808399,
            "hectometer": lambda x: x * 0.1,
            "decimeter": lambda x: x * 100,
            "millimeter": lambda x: x * 10000,
            "micrometer": lambda x: x * 10000000,
            "nanometer": lambda x: x * 10000000000,
        },
        "millimeter":{
            "millimeter": lambda x: x,
            "kilometers": lambda x: x * 10**(-6),
            "meters": lambda x: x * 10**(-3),
            "centimeters": lambda x: x * 10**(-1),
            "miles": lambda x: x * 6.21371192*10**(-7),
            "yards": lambda x: x * 0.0010936133,
            "feet": lambda x: x * 0.0032808399,
            "hectometer": lambda x: x * 10**(-5),
            "decameter": lambda x: x * 10**(-4),
            "decimeter":lambda x: x * 0.01,
            "micrometer": lambda x: x * 1000,
            "nanometer":lambda x: x * 1000000,
        },
        "micrometer":{
            "micrometer":lambda x: x,
            "kilometers":lambda x: x / 1000000000,
            "meters":lambda x: x * 10**(-6),
            "centimeters":lambda x: x * 10**(-4),
            "miles":lambda x: x * 6.21371192*10**(-10),
            "yards":lambda x: x * 1.0936133*10**(-6),
            "feet":lambda x: x * 3.2808399*10**(-6),
            "hectometer":lambda x: x * 10**(-8),
            "decameter":lambda x: x * 10**(-7),
            "decimeter":lambda x: x * 10**(-5),
            "millimeter":lambda x: x * 0.001,
            "nanometer": lambda x: x * 1000,
        },
        "nanometer":{
            "nanometer": lambda x: x,
            "kilometers": lambda x: x * 10**(-12),
            "meters": lambda x: x * 10**(-9),
            "centimeters": lambda x: x * 10**(-7),
            "miles": lambda x: x * 6.21371192*10**(-13),
            "yards": lambda x: x * 1.0936133*10**(-9),
            "feet": lambda x: x * 3.2808399*10**(-9),
            "hectometer": lambda x: x * 10**(-11),
            "decameter": lambda x: x * 10**(-10),
            "decimeter": lambda x: x * 10**(-8),
            "millimeter": lambda x: x * 10**(-6),
            "micrometer": lambda x: x * 0.001,
        }
    },
    "temperature":{
        "celsius": {
            "celsius": lambda x: x,
            "fahrenheit": lambda x: 1.8 * x + 32,
            "kelvin": lambda x: x + 273,
        },
        "fahrenheit": {
            "fahrenheit": lambda x: x,
            "celsius": lambda x: (x - 32) * 5.0 / 9.0,
            "kelvin": lambda x: (x - 32) * 5.0 / 9.0 + 273,
        },
        "kelvin": {
            "kelvin": lambda x: x,
            "celsius": lambda x: x - 273,
            "fahrenheit": lambda x: 1.8 * (x - 273) + 32,
        }
    },
    "time":{
        "nanoseconds":{
            "nanoseconds": lambda x: x,
            "microseconds": lambda x: x * 0.001,
            "milliseconds": lambda x: x * 10**(-6),
            "seconds": lambda x: x * 10**(-9),
            "minutes": lambda x: x * 10**(-10) / 6,
            "hours": lambda x: x * 10**(-11) / 36,
            "days": lambda x: x * 10**(-9) / (24 * 3600) ,
            "weeks": lambda x: x * 10**(-9) / (7 * 24 * 3600),
            "months": lambda x: x * 10**(-9) / (4.34821429 * 7 * 24 * 3600),
            "years": lambda x: x * 10**(-9) / (12 * 4.34821429 * 7 * 24 * 3600),
        },
        "microseconds":{
            "microseconds": lambda x: x,
            "nanoseconds": lambda x: x * 1000,
            "milliseconds": lambda x: x / 1000,
            "seconds": lambda x: x * 10**(-6),
            "minutes": lambda x: x * 10**(-7)/ 6,
            "hours": lambda x: x * 10**(-6)/ 3600,
            "days": lambda x: x * 10**(-6)/ (24 * 3600),
            "weeks": lambda x: x * 10**(-6)/ (7 * 24 * 3600),
            "months": lambda x: x * 10**(-6)/ (4.34821429 * 7 * 24 * 3600),
            "years": lambda x: x * 10**(-6)/ (12 * 4.34821429 * 7 * 24 * 3600),
        },
        "milliseconds":{
            "milliseconds": lambda x: x,
            "nanoseconds": lambda x: x * 10**(6),
            "microseconds": lambda x: x * 1000,
            "seconds": lambda x: x / 1000,
            "minutes": lambda x: x / 60000,
            "hours": lambda x: x / (3600 * 1000),
            "days": lambda x: x / (24 * 3600 * 1000),
            "weeks": lambda x: x / (7 * 24 * 3600 * 1000),
            "months": lambda x: x / (4.34821429 * 7 * 24 * 3600 * 1000),
            "years": lambda x: x / (12 * 4.34821429 * 7 * 24 * 3600 * 1000),
        },
        "seconds":{
            "seconds": lambda x: x,
            "nanoseconds": lambda x: x * 10**(9),
            "microseconds": lambda x: x * 10**(6),
            "milliseconds": lambda x: x * 1000,
            "minutes": lambda x: x / 60,
            "hours": lambda x: x / 3600,
            "days": lambda x: x / (24 * 3600),
            "weeks": lambda x: x / (7 * 24 * 3600),
            "months": lambda x: x / (4.34821429 * 7 * 24 * 3600),
            "years": lambda x: x / (12 * 4.34821429 * 7 * 24 * 3600),
        },
        "minutes":{
            "minutes": lambda x: x,
            "nanoseconds": lambda x: x * 6 * 10**(10),
            "microseconds": lambda x: x * 6 * 10**(7),
            "milliseconds": lambda x: x * 60000,
            "seconds": lambda x: x *60,
            "hours": lambda x: x / 60,
            "days": lambda x: x / (24 * 60),
            "weeks": lambda x: x / (7 * 24 * 60),
            "months": lambda x: x / (4.34821429 *  7 * 24 * 60),
            "years": lambda x: x / (12 * 4.34821429 *  7 * 24 * 60),
        },
        "hours":{
            "hours":lambda x: x,
            "nanoseconds": lambda x: x * 3600 * 10**(9),
            "microseconds": lambda x: x * 3600 * 10**(6),
            "milliseconds": lambda x: x * 3600 * 1000,
            "seconds": lambda x: x * 3600,
            "minutes": lambda x: x *60,
            "days": lambda x: x / 24,
            "weeks": lambda x: x / (7 * 24),
            "months": lambda x: x / (4.34821429 * 7 * 24),
            "years": lambda x: x / (12 * 4.34821429 * 7 * 24),
        },
        "days":{
            "days": lambda x: x,
            "nanoseconds": lambda x: x * 24 * 3600 * 10**(9),
            "microseconds": lambda x: x * 24 * 3600 * 10**(6),
            "milliseconds": lambda x: x * 24 * 3600 * 1000,
            "seconds": lambda x: x * 24 * 3600,
            "minutes": lambda x: x * 24 * 60,
            "hours": lambda x: x * 24,
            "weeks": lambda x: x / 7,
            "months": lambda x:x / (4.34821429 * 7),
            "years": lambda x:x / (12 * 4.34821429 * 7),
        },
        "weeks":{
            "weeks": lambda x: x,
            "nanoseconds": lambda x: x * 7 * 24 * 3600 * 10**(9),
            "microseconds": lambda x: x * 7 * 24 * 3600 * 10**(6),
            "milliseconds": lambda x: x * 7 * 24 * 3600 * 1000,
            "seconds": lambda x: x * 7 * 24 * 3600,
            "minutes": lambda x: x * 7 * 24 * 60,
            "hours": lambda x: x * 7 * 24,
            "days": lambda x: x * 7,
            "months": lambda x: x / 4.34821429,
            "years": lambda x: x / (12 * 4.34821429),
        },
        "months":{
            "months": lambda x: x,
            "nanoseconds": lambda x: x * 4.34821429 * 7 * 24 * 3600 * 10**(9),
            "microseconds": lambda x: x * 4.34821429 * 7 * 24 * 3600 * 10**(6),
            "milliseconds": lambda x: x * 4.34821429 * 7 * 24 * 3600 * 1000,
            "seconds": lambda x: x * 4.34821429 * 7 * 24 * 3600,
            "minutes": lambda x: x * 4.34821429 * 7 * 24 * 60,
            "hours": lambda x: x * 4.34821429 * 7 * 24,
            "days": lambda x: x * 4.34821429 * 7,
            "weeks": lambda x: x * 4.34821429,
            "years": lambda x: x / 12,
        },
        "years":{
            "years": lambda x: x,
            "nanoseconds": lambda x: x * 12 * 4.34821429 * 7 * 24 * 3600 * 10**(9),
            "microseconds": lambda x: x * 12 * 4.34821429 * 7 * 24 * 3600 * 10**(6),
            "milliseconds": lambda x: x * 12 * 4.34821429 * 7 * 24 * 3600 * 1000,
            "seconds": lambda x: x * 12 * 4.34821429 * 7 * 24 * 3600,
            "minutes": lambda x: x * 12 * 4.34821429 * 7 * 24 * 60,
            "hours": lambda x: x * 12 * 4.34821429 * 7 * 24,
            "days": lambda x: x * 12 * 4.34821429 * 7,
            "weeks": lambda x: x * 12 *  4.34821429,
            "months": lambda x: x * 12,
        }
    },
    "area":{
        "square meters":{
            "square meters": lambda x: x,
            "square yards": lambda x: 1.0936**2 * x,
            "square feet": lambda x: 3.28084**2 * x,
            "square centimeters": lambda x: 100**2 * x,
            "square kilometers": lambda x: x * 0.001**2,
            "square miles": lambda x: x * 0.000621371192**2,
            "square hectometer": lambda x: x * 0.01**2,
            "square decameter": lambda x: x * 0.1**2,
            "square decimeter": lambda x: x * 10.0**2,
            "square millimeter": lambda x: x * 1000.0**2,
            "square micrometer": lambda x: x * 1000000**2,
            "square nanometer": lambda x: x * 1000000000**2,
        },
        "square yards":{
            "square yards": lambda x: x,
            "square meters": lambda x: x * 0.9144**2,
            "square centimeters": lambda x: x * 91.44**2,
            "square feet": lambda x: 3 **2* x,
            "square kilometers": lambda x: 0.0009144**2 * x,
            "square miles": lambda x: x * 0.000568181818**2,
            "square hectometer": lambda x: 0.009144**2*x,
            "square decameter": lambda x: 0.0914**2*x,
            "square decimeter": lambda x: 9.14400**2*x,
            "square millimeter": lambda x: 914.4**2*x,
            "square micrometer": lambda x: 914400**2*x,
            "square nanometer": lambda x: 914400000**2*x,
        },
        "square centimeters":{
            "square centimeters": lambda x: x,
            "square meters": lambda x: x *0.01**2,
            "square yards": lambda x: x * 0.010936133**2 ,
            "square feet": lambda x: x * 0.032808399**2,
            "square miles": lambda x: x * (6.21371192*10**(-6))**2,
            "square hectometer": lambda x: x*0.0001**2,
            "square decameter": lambda x: x*0.001**2,
            "square decimeter": lambda x: 0.1**2*x,
            "square millimeter": lambda x: 10**2*x,
            "square micrometer": lambda x: 10000**2*x,
            "square nanometer": lambda x:10000000**2*x,
            "square kilometers": lambda x: x*0.00001**2,
        },
        "square feet": {
            "square feet": lambda x: x,
            "square meters": lambda x:x*0.3048**2 ,
            "square yards": lambda x: x*0.333333333**2,
            "square centimeters": lambda x: x * 30.48**2,
            "square kilometers": lambda x: x * 0.0003048**2,
            "square miles": lambda x: x * 0.000189393939**2,
            "square hectometer": lambda x: 0.003048**2 *x,
            "square decameter": lambda x: 0.03048**2*x,
            "square decimeter": lambda x: 3.04800**2*x,
            "square millimeter": lambda x: 304.8**2*x,
            "square micrometer": lambda x: 304800**2*x,
            "square nanometer": lambda x:304800000**2*x,
        },
        "square miles": {
            "square miles": lambda x: x,
            "square kilometers": lambda x: 1.60934**2 * x,
            "square meters": lambda x: x*(1.60934 * 1000)**2,
            "square centimeters": lambda x: x*(1.60934 * 1000 * 100)**2,
            "square feet": lambda x: 5280**2 * x,
            "square yards": lambda x:x* (5280 / 3.0)**2,
            "square hectometer": lambda x: 16.09344**2*x,
            "square decameter": lambda x: 160.9344**2*x,
            "square decimeter": lambda x:16093.44**2*x,
            "square millimeter": lambda x: 1609344**2*x,
            "square micrometer": lambda x: 1609344000**2*x,
            "square nanometer": lambda x: 1609344000000**2*x,
        },
        "square kilometers": {
            "square kilometers": lambda x: x,
            "square meters": lambda x: x * 1000**2,
            "square centimeters": lambda x: x * (1000 * 100)**2,
            "square miles": lambda x: x / (1.60934)**2,
            "square yards": lambda x: x * 1093.61**2,
            "square feet": lambda x: x * (1093.61 * 3)**2,
            "square hectometer": lambda x: x * 10**2,
            "square decameter": lambda x: x * 100**2,
            "square decimeter": lambda x: x * 10000**2,
            "square millimeter": lambda x: x * 1000000**2,
            "square micrometer": lambda x: x * 1000000000**2,
            "square nanometer": lambda x: x *1000000000000**2,
        },
        "square hectometer":{
            "square hectometer": lambda x: x,
            "square kilometers":lambda x: x /(10)**2,
            "square meters": lambda x: x *100**2,
            "square centimeters": lambda x: x *10000**2,
            "square miles": lambda x: x *0.0621371192**2,
            "square yards": lambda x: x *109.36133**2,
            "square feet": lambda x: x *328.08399**2,
            "square decameter": lambda x: x * 10**2,
            "square millimeter": lambda x: x *100000**2,
            "square micrometer": lambda x: x *100000000**2,
            "square nanometer": lambda x: x *100000000000**2,
            "square decimeter": lambda x: x*1000**2,
        },
        "square decameter":{
            "square decameter": lambda x: x,
            "square kilometer": lambda x: x *0.01**2,
            "square meters": lambda x: x *10**2,
            "square centimeters": lambda x: x *1000**2,
            "square miles": lambda x: x *0.00621371192**2,
            "square yards": lambda x: x *10.936133**2,
            "square feet": lambda x: x *32.808399**2,
            "square hectometer": lambda x: x *0.1**2,
            "square millimeter": lambda x: x *10000**2,
            "square micrometer": lambda x: x *10000000**2,
            "square nanometer": lambda x: x *10000000000**2,
            "square decimeter" : lambda x: x*100**2,
        },
        "square millimeter":{
            "square millimeter": lambda x: x,
            "square kilometer": lambda x: x *(10**(-6))**2,
            "square meters": lambda x: x * (10**(-3))**2,
            "square centimeters": lambda x: x * (10**(-1))**2,
            "square miles": lambda x: x *(6.21371192*10**(-7))**2,
            "square yards": lambda x: x *0.0010936133**2,
            "square feet": lambda x: x *0.0032808399**2,
            "square hectometer": lambda x: x * (10**(-5))**2,
            "square decameter": lambda x: x * (10**(-4))**2,
            "square micrometer": lambda x: x * 1000**2,
            "square nanometer":lambda x: x *1000000**2,
            "square decimeter": lambda x: x*0.01**2,
        },
        "square micrometer":{
            "square micrometer":lambda x: x,
            "square kilometer":lambda x: x * (10**(-9))**2,
            "square meters":lambda x: x * (10**(-6))**2,
            "square centimeters":lambda x: x * (10**(-4))**2,
            "square miles":lambda x: x *(6.21371192*10**(-10))**2,
            "square yards":lambda x: x * (1.0936133*10**(-6))**2,
            "square feet":lambda x: x * (3.2808399*10**(-6))**2,
            "square hectometer":lambda x: x * (10**(-8))**2,
            "square decameter":lambda x: x * (10**(-7))**2,
            "square millimeter":lambda x: x * (0.001)**2,
            "square nanometer": lambda x: x *1000**2,
            "square decimeter": lambda x: x*(10**(-5))**2,
        },
        "square nanometer":{
            "square nanometer": lambda x: x,
            "square kilometer": lambda x: x * (10**(-12))**2,
            "square meters": lambda x: x * (10**(-9))**2,
            "square centimeters": lambda x: x * (10**(-7))**2,
            "square miles": lambda x: x *(6.21371192*10**(-13))**2,
            "square yards": lambda x: x *(1.0936133*10**(-9))**2,
            "square feet": lambda x: x *(3.2808399*10**(-9))**2,
            "square hectometer": lambda x: x * (10**(-11))**2,
            "square decameter": lambda x: x * (10**(-10))**2,
            "square millimeter": lambda x: x * (10**(-6))**2,
            "square micrometer": lambda x: x *0.001**2,
            "square decimeter": lambda x: x*(10**(-8))**2,
        }
    },
    "volume":{
        "cubic meters": {
            "cubic meters": lambda x: x,
            "liter": lambda x:x*10.0**3,
            "cubic yards": lambda x: 1.0936**3 * x,
            "cubic feet": lambda x: 3.28084 **3 * x,
            "cubic centimeters": lambda x: 100**3 * x,
            "cubic kilometers": lambda x: x*0.001**3,
            "cubic miles": lambda x: x*0.000621371192**3,
            "cubic hectometer": lambda x:x*0.01**3,
            "cubic decameter": lambda x: x*0.1**3,
            "cubic decimeter": lambda x:x*10.0**3,
            "cubic millimeter": lambda x:x*1000.0**3,
            "cubic micrometer": lambda x:x*1000000**3,
            "cubic nanometer": lambda x:x*1000000000**3,
        },
        "cubic yards": {
            "cubic yards": lambda x: x,
            "liter": lambda x: 9.14400**3*x,
            "cubic meters": lambda x: x*0.9144**3,
            "cubic centimeters": lambda x:x*91.44**3,
            "cubic feet": lambda x: 3 * x,
            "cubic kilometers": lambda x: 0.0009144 **3* x,
            "cubic miles": lambda x: x*0.000568181818**3,
            "cubic hectometer": lambda x: 0.009144**3*x,
            "cubic decameter": lambda x: 0.0914**3*x,
            "cubic decimeter": lambda x: 9.14400**3*x,
            "cubic millimeter": lambda x: 914.4**3*x,
            "cubic micrometer": lambda x: 914400**3*x,
            "cubic nanometer": lambda x: 914400000**3*x,
        },      
        "cubic centimeters": {
            "cubic centimeters": lambda x: x,
            "liter": lambda x: 0.1**3*x,
            "cubic meters": lambda x: x *0.01**3,
            "cubic yards": lambda x: x * 0.010936133**3 ,
            "cubic feet": lambda x: x * 0.032808399**3,
            "cubic miles": lambda x: x * (6.21371192*10**(-6))**3,
            "cubic hectometer": lambda x: x*0.0001**3,
            "cubic decameter": lambda x: x*0.001**3,
            "cubic decimeter": lambda x: 0.1**3*x,
            "cubic millimeter": lambda x: 10**3*x,
            "cubic micrometer": lambda x: 10000**3*x,
            "cubic nanometer": lambda x:10000000**3*x,
            "cubic kilometers": lambda x: x*0.00001**3,
        },
        "cubic feet": {
            "cubic feet": lambda x: x,
            "liter": lambda x:3.04800**3*x,
            "cubic meters": lambda x:x*0.3048**3 ,
            "cubic yards": lambda x: x*0.333333333**3,
            "cubic centimeters": lambda x: x * 30.48**3,
            "cubic kilometers": lambda x: x * 0.0003048**3,
            "cubic miles": lambda x: x * 0.000189393939**3,
            "cubic hectometer": lambda x: 0.003048**3 *x,
            "cubic decameter": lambda x: 0.03048**3*x,
            "cubic decimeter": lambda x: 3.04800**3*x,
            "cubic millimeter": lambda x: 304.8**3*x,
            "cubic micrometer": lambda x: 304800**3*x,
            "cubic nanometer": lambda x:304800000**3*x,
        },
        "cubic miles": {
            "cubic miles": lambda x: x,
            "liter": lambda x:16093.44**3*x,
            "cubic kilometers": lambda x: 1.60934**3 * x,
            "cubic meters": lambda x:x* (1.60934 * 1000)**3,
            "cubic centimeters": lambda x: (1.60934 * x * 1000 * 100)**3,
            "cubic feet": lambda x: 5280**3 * x,
            "cubic yards": lambda x: x* (5280/ 3.0)**3,
            "cubic hectometer": lambda x: 16.09344**3*x,
            "cubic decameter": lambda x: 160.9344**3*x,
            "cubic decimeter": lambda x:16093.44**3*x,
            "cubic millimeter": lambda x: 1609344**3*x,
            "cubic micrometer": lambda x: 1609344000**3*x,
            "cubic nanometer": lambda x: 1609344000000**3*x,
        },
        "cubic kilometers": {
            "cubic kilometers": lambda x: x,
            "liter": lambda x: x * 10000**3,
            "cubic meters": lambda x: x * 1000**3,
            "cubic centimeters": lambda x: x * (1000 * 100)**3,
            "cubic miles": lambda x: x / 1.60934**3,
            "cubic yards": lambda x: x * 1093.61**3,
            "cubic feet": lambda x: x * (1093.61 * 3)**3,
            "cubic hectometer": lambda x: x * 10**3,
            "cubic decameter": lambda x: x * 100**3,
            "cubic decimeter": lambda x: x * 10000**3,
            "cubic millimeter": lambda x: x * 1000000**3,
            "cubic micrometer": lambda x: x * 1000000000**3,
            "cubic nanometer": lambda x: x *1000000000000**3,
        },
        "cubic hectometer":{
            "cubic hectometer": lambda x: x,
            "liter": lambda x: x*1000**3,
            "cubic kilometers":lambda x: x /10**3,
            "cubic meters": lambda x: x *100**3,
            "cubic centimeters": lambda x: x *10000**3,
            "cubic miles": lambda x: x *0.0621371192**3,
            "cubic yards": lambda x: x *109.36133**3,
            "cubic feet": lambda x: x *328.08399**3,
            "cubic decameter": lambda x: x * 10**3,
            "cubic millimeter": lambda x: x *100000**3,
            "cubic micrometer": lambda x: x *100000000**3,
            "cubic nanometer": lambda x: x *100000000000**3,
            "cubic decimeter": lambda x: x*1000**3,
        },
        "cubic decameter":{
            "cubic decameter": lambda x: x,
            "liter": lambda x: x*100**3,
            "cubic kilometer": lambda x: x *0.01**3,
            "cubic meters": lambda x: x *10**3,
            "cubic centimeters": lambda x: x *1000**3,
            "cubic miles": lambda x: x *0.00621371192**3,
            "cubic yards": lambda x: x *10.936133**3,
            "cubic feet": lambda x: x *32.808399**3,
            "cubic hectometer": lambda x: x *0.1**3,
            "cubic millimeter": lambda x: x *10000**3,
            "cubic micrometer": lambda x: x *10000000**3,
            "cubic nanometer": lambda x: x *10000000000**3,
            "cubic decimeter" : lambda x: x*100**3,
        },
        "cubic millimeter":{
            "cubic millimeter": lambda x: x,
            "liter": lambda x: x*0.01**3,
            "cubic kilometer": lambda x: x *(10**(-6))**3,
            "cubic meters": lambda x: x * (10**(-3))**3,
            "cubic centimeters": lambda x: x * (10**(-1))**3,
            "cubic miles": lambda x: x *(6.21371192*10**(-7))**3,
            "cubic yards": lambda x: x *0.0010936133**3,
            "cubic feet": lambda x: x *0.0032808399**3,
            "cubic hectometer": lambda x: x * (10**(-5))**3,
            "cubic decameter": lambda x: x * (10**(-4))**3,
            "cubic micrometer": lambda x: x * 1000**3,
            "cubic nanometer":lambda x: x *1000000**3,
            "cubic decimeter": lambda x: x*0.01**3,
        },
        "cubic micrometer":{
            "cubic micrometer":lambda x: x,
            "liter": lambda x: x*(10**(-5))**3,
            "cubic kilometer":lambda x: x * (10**(-9))**3,
            "cubic meters":lambda x: x * (10**(-6))**3,
            "cubic centimeters":lambda x: x * (10**(-4))**3,
            "cubic miles":lambda x: x *(6.21371192*10**(-10))**3,
            "cubic yards":lambda x: x * (1.0936133*10**(-6))**3,
            "cubic feet":lambda x: x * (3.2808399*10**(-6))**3,
            "cubic hectometer":lambda x: x * (10**(-8))**3,
            "cubic decameter":lambda x: x * (10**(-7))**3,
            "cubic millimeter":lambda x: x * 0.001**3,
            "cubic nanometer": lambda x: x *1000**3,
            "cubic decimeter": lambda x: x*(10**(-5))**3,
        },
        "cubic nanometer":{
            "cubic nanometer": lambda x: x,
            "liter": lambda x:x*(10**(-8))**3,
            "cubic kilometer": lambda x: x * (10**(-12))**3,
            "cubic meters": lambda x: x * (10**(-9))**3,
            "cubic centimeters": lambda x: x * (10**(-7))**3,
            "cubic miles": lambda x: x *(6.21371192*10**(-13))**3,
            "cubic yards": lambda x: x *(1.0936133*10**(-9))**3,
            "cubic feet": lambda x: x *(3.2808399*10**(-9))**3,
            "cubic hectometer": lambda x: x * (10**(-11))**3,
            "cubic decameter": lambda x: x * (10**(-10))**3,
            "cubic millimeter": lambda x: x * (10**(-6))**3,
            "cubic micrometer": lambda x: x *0.001**3,
            "cubic decimeter": lambda x: x*(10**(-8))**3,
        },
        "cubic decimeter":{
            "cubic decimeter": lambda x:x,
            "liter": lambda x: x,
            "cubic meters": lambda x: 0.1**3*x,
            "cubic yards": lambda x:  0.1094**3*x,
            "cubic centimeters": lambda x: 10**3*x,
            "cubic feet": lambda x: 0.3280839895**3*x,
            "cubic kilometer": lambda x: 0.0001**3*x,
            "cubic hectometer": lambda x: 0.001**3*x,
            "cubic decameter": lambda x:  0.01**3*x,
            "cubic millimeter": lambda x: 100**3*x,
            "cubic nanometer": lambda x: 100000000**3*x,
            "cubic miles": lambda x: 0.000062137119224**3*x,
            "cubic micrometer" : lambda x: 100000**3*x,
        },
        "liter":{
            "liter": lambda x: x,
            "cubic decimeter": lambda x:x,
            "cubic meters": lambda x: 0.1**3*x,
            "cubic yards": lambda x:  0.1094**3*x,
            "cubic centimeters": lambda x: 10**3*x,
            "cubic feet": lambda x: 0.3280839895**3*x,
            "cubic kilometer": lambda x: 0.0001**3*x,
            "cubic hectometer": lambda x: 0.001**3*x,
            "cubic decameter": lambda x:  0.01**3*x,
            "cubic millimeter": lambda x: 100**3*x,
            "cubic nanometer": lambda x: 100000000**3*x,
            "cubic miles": lambda x: 0.000062137119224**3*x,
            "cubic micrometer": lambda x: 100000**3*x,
        }
    },
    "weight":{
        "microgram":{
            "microgram":lambda x: x,
            "milligram":lambda x: x * 0.001,
            "gram":lambda x: x * 0.000001,
            "kilogram":lambda x: x * 10**(-9),
            "pound":lambda x: x * 2.204622621 * 10**(-9),
            "tonne":lambda x: x * 10**(-12),
            "ounce":lambda x: x * 3.527396194 * 10**(-8),
            "carat":lambda x: x * 0.000005,
        },
        "milligram":{
            "milligram":lambda x: x,
            "microgram":lambda x: x * 1000,
            "gram":lambda x: x * 0.001,
            "kilogram":lambda x: x * 0.000001,
            "pound":lambda x: x * 0.0000022046,
            "tonne":lambda x: x * 10**(-9),
            "ounce":lambda x: x * 0.000035274,
            "carat":lambda x: x * 0.005,
        },
        "gram":{
            "gram":lambda x: x,
            "microgram":lambda x: x * 10**(6),
            "milligram":lambda x: x * 1000,
            "kilogram":lambda x: x * 0.001,
            "pound":lambda x: x * 0.0022046226,
            "tonne":lambda x: x * 0.000001,
            "ounce":lambda x: x * 0.0352739619,
            "carat":lambda x: x * 5, 
        },
        "kilogram":{
            "kilogram":lambda x: x,
            "microgram":lambda x: x * 10**(9),
            "milligram":lambda x: x * 10**(6),
            "gram":lambda x: x * 1000,
            "pound":lambda x: x * 2.2046226218,
            "tonne":lambda x: x * 0.001,
            "ounce":lambda x: x * 35.27396195,
            "carat":lambda x: x * 5000,
        },
        "pound":{
            "pound":lambda x: x,
            "microgram":lambda x: x * 453592370,
            "milligram":lambda x: x * 453592.37,
            "gram":lambda x: x * 453.59237,
            "kilogram":lambda x: x * 0.45359237,
            "tonne":lambda x: x * 0.0004535924,
            "ounce":lambda x: x * 16,
            "carat":lambda x: x * 2267.96185,
        },
        "tonne":{
            "tonne":lambda x: x,
            "microgram":lambda x: x * 10**(12),
            "milligram":lambda x: x * 10**(9),
            "gram":lambda x: x * 10**(6),
            "kilogram":lambda x: x * 1000,
            "pound":lambda x: x * 2204.6226218,
            "ounce":lambda x: x * 35273.96195,
            "carat":lambda x: x * 5000000,
        },
        "ounce":{
            "ounce":lambda x: x,
            "microgram":lambda x: x * 28349523.125,
            "milligram":lambda x: x * 28349.523125,
            "gram":lambda x: x * 28.349523125,
            "kilogram":lambda x: x * 0.0283495231,
            "pound":lambda x: x * 0.0625,
            "tonne":lambda x: x * 0.0000283495,
            "carat":lambda x: x * 141.74761563,
        },
        "carat":{
            "carat":lambda x: x,
            "microgram":lambda x: x * 200000,
            "milligram":lambda x: x * 200,
            "gram":lambda x: x * 0.2,
            "kilogram":lambda x: x * 0.0002,
            "pound":lambda x: x * 0.0004409245,
            "tonne":lambda x: x * 2 * 10**(-7),
            "ounce":lambda x: x * 0.0070547924,
        }
    },
    "angle":{
        "radian":{
            "radian":lambda x: x,
            "degree":lambda x: x * 57.295779513,
            "grad":lambda x: x * 63.661977237,
            "minute":lambda x: x * 3437.7467708,
            "second":lambda x: x *206264.80625,
            "gon":lambda x: x * 63.661977237,
            "sign":lambda x: x * 1.9098593171,
            "mil":lambda x: x * 1018.5916358,
            "circle":lambda x: x * 0.1591549431,
            "right angle":lambda x: x * 0.6366197724,
        },
        "degree":{
            "degree":lambda x: x,
            "radian":lambda x: x * 0.017453292519943,
            "grad":lambda x: x * 1.1111111111,
            "minute":lambda x: x * 60,
            "second":lambda x: x * 3600,
            "gon":lambda x: x * 1.1111111111,
            "sign":lambda x: x * 0.0333333333,
            "mil":lambda x: x * 17.777777778,
            "circle":lambda x: x * 0.0027777778,
            "right angle":lambda x: x * 0.0111111111,
        },
        "grad":{
            "grad":lambda x: x,
            "radian":lambda x: x * 0.0157079633,
            "degree":lambda x: x * 0.9,
            "minute":lambda x: x * 54,
            "second":lambda x: x * 3240,
            "gon":lambda x: x * 1,
            "sign":lambda x: x * 0.03,
            "mil":lambda x: x * 16,
            "circle":lambda x: x * 0.0025,
            "right angle":lambda x: x * 0.01,
        },
        "minute":{
            "minute":lambda x: x,
            "radian":lambda x: x * 0.0002908882,
            "degree":lambda x: x * 0.0166666667,
            "grad":lambda x: x * 0.0185185185,
            "second":lambda x: x * 60,
            "gon":lambda x: x * 0.0185185185,
            "sign":lambda x: x * 0.0005555556,
            "mil":lambda x: x * 0.2962962963,
            "circle":lambda x: x * 0.0000462963,
            "right angle":lambda x: x * 0.0001851852,
        },
        "second":{
            "second":lambda x: x,
            "radian":lambda x: x * 0.0000048481,
            "degree":lambda x: x * 0.0002777778,
            "grad":lambda x: x * 0.000308642,
            "minute":lambda x: x * 0.0166666667,
            "gon":lambda x: x * 0.000308642,
            "sign":lambda x: x * 0.0000092593,
            "mil":lambda x: x * 0.0049382716,
            "circle":lambda x: x * 7.716049382 * 10**(-7),
            "right angle":lambda x: x * 0.0000030864,
        },
        "gon":{
            "gon":lambda x: x,
            "radian":lambda x: x * 0.0157079633,
            "degree":lambda x: x * 0.9,
            "grad":lambda x: x * 1,
            "minute":lambda x: x * 54,
            "second":lambda x: x * 3240,
            "sign":lambda x: x * 0.03,
            "mil":lambda x: x * 16,
            "circle":lambda x: x * 0.0025,
            "right angle":lambda x: x * 0.01,
        },
        "sign":{
            "sign":lambda x: x,
            "radian":lambda x: x * 0.5235987756,
            "degree":lambda x: x * 30,
            "grad":lambda x: x * 33.333333333,
            "minute":lambda x: x * 1800,
            "second":lambda x: x * 108000,
            "gon":lambda x: x * 33.333333333,
            "mil":lambda x: x * 533.33333333,
            "circle":lambda x: x * 0.0833333333,
            "right angle":lambda x: x * 0.3333333333,
        },
        "mil":{
            "mil":lambda x: x,
            "radian":lambda x: x * 0.0009817477,
            "degree":lambda x: x * 0.05625,
            "grad":lambda x: x * 0.0625,
            "minute":lambda x: x * 3.375,
            "second":lambda x: x * 202.5,
            "gon":lambda x: x * 0.0625,
            "sign":lambda x: x * 0.001875,
            "circle":lambda x: x * 0.00015625,
            "right angle":lambda x: x * 0.000625,
        },
        "circle":{
            "circle":lambda x: x,
            "radian":lambda x: x * 6.2831853072,
            "degree":lambda x: x * 360,
            "grad":lambda x: x * 400,
            "minute":lambda x: x * 21600,
            "second":lambda x: x * 1296000,
            "gon":lambda x: x * 400,
            "sign":lambda x: x * 12,
            "mil":lambda x: x * 6400,
            "right angle":lambda x: x * 4,
        },
        "right angle":{
            "right angle":lambda x: x,
            "radian":lambda x: x * 1.5707963268,
            "degree":lambda x: x * 90,
            "grad":lambda x: x * 100,
            "minute":lambda x: x * 5400,
            "second":lambda x: x * 324000,
            "gon":lambda x: x * 100,
            "sign":lambda x: x * 3,
            "mil":lambda x: x * 1600,
            "circle":lambda x: x * 0.25,
        }

    },
    "data storage":{
        "bit":{
            "bit":lambda x: x,
            "byte":lambda x: x * 0.125,
            "nibble":lambda x: x * 0.25,
            "character":lambda x: x * 0.125,
            "word":lambda x: x * 0.0625,
            "kilobit(kb)":lambda x: x * 0.0009765625,
            "kilobyte(kB)":lambda x: x * 0.0001220703,
            "kilobyte(10^3 bytes)":lambda x: x * 0.000125,
            "megabit(Mb)":lambda x: x * 9.536743164 *10**(-7) ,
            "megabyte(MB)":lambda x: x * 1.192092895 * 10**(-7),
            "megabyte(10^6 bytes)":lambda x: x * 1.25 * 10**(-7),
            "gigabit(Gb)":lambda x: x * 9.313225746 * 10**(-10),
            "gigabyte(GB)":lambda x: x * 1.164153218 * 10**(-10),
            "gigabyte(10^9 bytes)":lambda x: x * 1.25 * 10**(-10),
            "terabit(Tb)":lambda x: x * 9.094947017 * 10**(-13),
            "terabyte(TB)":lambda x: x * 1.136868377 * 10**(-13),
            "terabyte(10^12 bytes)":lambda x: x * 1.25 * 10**(-13),
        },
        "byte":{
            "byte":lambda x: x,
            "bit":lambda x: x * 8,
            "nibble":lambda x: x * 2,
            "character":lambda x: x * 1,
            "word":lambda x: x * 0.5,
            "kilobit(kb)":lambda x: x * 0.0078125,
            "kilobyte(kB)":lambda x: x * 0.0009765625,
            "kilobyte(10^3 bytes)":lambda x: x * 0.001,
            "megabit(Mb)":lambda x: x * 0.0000076294,
            "megabyte(MB)":lambda x: x * 9.536743164 * 10**(-7),
            "megabyte(10^6 bytes)":lambda x: x * 0.000001,
            "gigabit(Gb)":lambda x: x * 7.450580596 * 10**(-9),
            "gigabyte(GB)":lambda x: x * 9.313225746 * 10**(-10),
            "gigabyte(10^9 bytes)":lambda x: x * 10**(-9),
            "terabit(Tb)":lambda x: x * 7.275957614 * 10**(-12),
            "terabyte(TB)":lambda x: x * 9.094947017 * 10**(-13),
            "terabyte(10^12 bytes)":lambda x: x * 10**(-12),
        },
        "nibble":{
            "nibble":lambda x: x,
            "bit":lambda x: x * 4,
            "byte":lambda x: x * 0.5,
            "character":lambda x: x * 0.5,
            "word":lambda x: x * 0.25,
            "kilobit(kb)":lambda x: x * 0.00390625,
            "kilobyte(kB)":lambda x: x * 0.0004882813,
            "kilobyte(10^3 bytes)":lambda x: x * 0.0005,
            "megabit(Mb)":lambda x: x * 0.0000038147,
            "megabyte(MB)":lambda x: x * 4.768371582 * 10**(-7),
            "megabyte(10^6 bytes)":lambda x: x * 5 * 10**(-7),
            "gigabit(Gb)":lambda x: x * 3.725290298 * 10**(-9),
            "gigabyte(GB)":lambda x: x * 4.656612873* 10**(-10),
            "gigabyte(10^9 bytes)":lambda x: x * 5 * 10**(-10),
            "terabit(Tb)":lambda x: x * 3.637978807 * 10**(-12),
            "terabyte(TB)":lambda x: x * 4.547473508 * 10**(-13),
            "terabyte(10^12 bytes)":lambda x: x * 5 * 10**(-13),
        },
        "character":{
            "character":lambda x: x,
            "bit":lambda x: x * 8,
            "byte":lambda x: x * 1,
            "nibble":lambda x: x * 2,
            "word":lambda x: x * 0.5,
            "kilobit(kb)":lambda x: x * 0.0078125,
            "kilobyte(kB)":lambda x: x * 0.0009765625,
            "kilobyte(10^3 bytes)":lambda x: x * 0.001,
            "megabit(Mb)":lambda x: x * 0.0000076294,
            "megabyte(MB)":lambda x: x * 9.536743164 * 10**(-7),
            "megabyte(10^6 bytes)":lambda x: x * 0.000001,
            "gigabit(Gb)":lambda x: x * 7.450580596 * 10**(-9),
            "gigabyte(GB)":lambda x: x * 9.313225746 * 10**(-10),
            "gigabyte(10^9 bytes)":lambda x: x * 10**(-9),
            "terabit(Tb)":lambda x: x * 7.275957614 * 10**(-12),
            "terabyte(TB)":lambda x: x * 9.094947017 * 10**(-13),
            "terabyte(10^12 bytes)":lambda x: x * 10**(-12),
        },
        "word":{
            "word":lambda x: x,
            "bit":lambda x: x * 16,
            "byte":lambda x: x * 2,
            "nibble":lambda x: x * 4,
            "character":lambda x: x * 2,
            "kilobit(kb)":lambda x: x * 0.015625,
            "kilobyte(kB)":lambda x: x * 0.001953125,
            "kilobyte(10^3 bytes)":lambda x: x * 0.002,
            "megabit(Mb)":lambda x: x * 0.0000152588,
            "megabyte(MB)":lambda x: x * 0.0000019073,
            "megabyte(10^6 bytes)":lambda x: x * 0.000002,
            "gigabit(Gb)":lambda x: x * 1.490116119 * 10**(-8),
            "gigabyte(GB)":lambda x: x * 1.862645149 * 10**(-9),
            "gigabyte(10^9 bytes)":lambda x: x * 2 * 10**(-9),
            "terabit(Tb)":lambda x: x * 1.455191522 * 10**(-11),
            "terabyte(TB)":lambda x: x * 1.818989403 * 10**(-12),
            "terabyte(10^12 bytes)":lambda x: x * 2 * 10**(-12),
        },
        "kilobit(kb)":{
            "kilobit(kb)":lambda x: x,
            "bit":lambda x: x * 1024,
            "byte":lambda x: x * 128,
            "nibble":lambda x: x * 256,
            "character":lambda x: x * 128,
            "word":lambda x: x * 64,
            "kilobyte(kB)":lambda x: x * 0.125,
            "kilobyte(10^3 bytes)":lambda x: x * 0.128,
            "megabit(Mb)":lambda x: x * 0.0009765625,
            "megabyte(MB)":lambda x: x * 0.0001220703,
            "megabyte(10^6 bytes)":lambda x: x * 0.000128,
            "gigabit(Gb)":lambda x: x * 9.536743164 * 10**(-7),
            "gigabyte(GB)":lambda x: x * 1.192092895 * 10**(-7),
            "gigabyte(10^9 bytes)":lambda x: x * 1.28 * 10**(-7),
            "terabit(Tb)":lambda x: x * 9.313225746 * 10**(-10),
            "terabyte(TB)":lambda x: x * 1.164153218 * 10**(-100),
            "terabyte(10^12 bytes)":lambda x: x * 1.28 * 10**(-10),
        },
        "kilobyte(kB)":{
            "kilobyte(kB)":lambda x: x,
            "bit":lambda x: x * 8192,
            "byte":lambda x: x * 1024,
            "nibble":lambda x: x * 2048,
            "character":lambda x: x * 1024,
            "word":lambda x: x * 512,
            "kilobit(kb)":lambda x: x * 8,
            "kilobyte(10^3 bytes)":lambda x: x * 1.024,
            "megabit(Mb)":lambda x: x * 0.0078125,
            "megabyte(MB)":lambda x: x * 0.0009765625,
            "megabyte(10^6 bytes)":lambda x: x * 0.001024,
            "gigabit(Gb)":lambda x: x * 0.0000076294,
            "gigabyte(GB)":lambda x: x * 9.536743164 * 10**(-7),
            "gigabyte(10^9 bytes)":lambda x: x * 0.000001024,
            "terabit(Tb)":lambda x: x * 7.450580596 * 10**(-9),
            "terabyte(TB)":lambda x: x * 9.313225746 * 10**(-10),
            "terabyte(10^12 bytes)":lambda x: x * 1.024 * 10**(-9),
        },
        "kilobyte(10^3 bytes)":{
            "kilobyte(10^3 bytes)":lambda x: x,
            "bit":lambda x: x * 8000,
            "byte":lambda x: x * 1000,
            "nibble":lambda x: x * 2000,
            "character":lambda x: x * 1000,
            "word":lambda x: x * 500,
            "kilobit(kb)":lambda x: x * 7.8125,
            "kilobyte(kB)":lambda x: x * 0.9765625,
            "megabit(Mb)":lambda x: x * 0.0076293945,
            "megabyte(MB)":lambda x: x * 0.0009536743,
            "megabyte(10^6 bytes)":lambda x: x * 0.001,
            "gigabit(Gb)":lambda x: x * 0.0000074506,
            "gigabyte(GB)":lambda x: x * 9.313225746 * 10**(-7),
            "gigabyte(10^9 bytes)":lambda x: x * 0.000001,
            "terabit(Tb)":lambda x: x * 7.275957614 * 10**(-9),
            "terabyte(TB)":lambda x: x * 9.094947017 * 10**(-10),
            "terabyte(10^12 bytes)":lambda x: x * 9.999999999 * 10**(-10),
        },
        "megabit(Mb)":{
            "megabit(Mb)":lambda x: x,
            "bit":lambda x: x * 1048576,
            "byte":lambda x: x * 131072,
            "nibble":lambda x: x * 262144,
            "character":lambda x: x * 131072,
            "word":lambda x: x * 65536,
            "kilobit(kb)":lambda x: x * 1024,
            "kilobyte(kB)":lambda x: x * 128,
            "kilobyte(10^3 bytes)":lambda x: x * 131.072,
            "megabyte(MB)":lambda x: x * 0.125,
            "megabyte(10^6 bytes)":lambda x: x * 0.131072,
            "gigabit(Gb)":lambda x: x * 0.0009765625,
            "gigabyte(GB)":lambda x: x * 0.0001220703,
            "gigabyte(10^9 bytes)":lambda x: x * 0.000131072,
            "terabit(Tb)":lambda x: x * 9.536743164 * 10**(-7),
            "terabyte(TB)":lambda x: x * 1.192092895 * 10**(-7),
            "terabyte(10^12 bytes)":lambda x: x * 1.31072 * 10**(-7),
        },
        "megabyte(MB)":{
            "megabyte[MB]":lambda x: x,
            "bit":lambda x: x * 8388608,
            "byte":lambda x: x * 1048576,
            "nibble":lambda x: x * 2097152,
            "character":lambda x: x * 1048576,
            "word":lambda x: x * 524288,
            "kilobit(kb)":lambda x: x * 8192,
            "kilobyte(kB)":lambda x: x * 1024,
            "kilobyte(10^3 bytes)":lambda x: x * 1048.576,
            "megabit(Mb)":lambda x: x * 8,
            "megabyte(10^6 bytes)":lambda x: x * 1.048576,
            "gigabit(Gb)":lambda x: x * 0.0078125,
            "gigabyte(GB)":lambda x: x * 0.0009765625,
            "gigabyte(10^9 bytes)":lambda x: x * 0.001048576,
            "terabit(Tb)":lambda x: x * 0.0000076294,
            "terabyte(TB)":lambda x: x * 9.536743164 * 10**(-7),
            "terabyte(10^12 bytes)":lambda x: x * 0.0000010486,
        },
        "megabyte(10^6 bytes)":{
            "megabyte(10^6 bytes)":lambda x: x,
            "bit":lambda x: x * 8 * 10**(6),
            "byte":lambda x: x * 10**(6),
            "nibble":lambda x: x * 2 * 10**(6),
            "character":lambda x: x * 10**(6),
            "word":lambda x: x * 500000,
            "kilobit(kb)":lambda x: x * 7812.5,
            "kilobyte(kB)":lambda x: x * 976.5625,
            "kilobyte(10^3 bytes)":lambda x: x * 1000,
            "megabit(Mb)":lambda x: x * 7.6293945313,
            "megabyte(MB)":lambda x: x * 0.9536743164,
            "gigabit(Gb)":lambda x: x * 0.0074505806,
            "gigabyte(GB)":lambda x: x * 0.0009313226,
            "gigabyte(10^9 bytes)":lambda x: x * 0.001,
            "terabit(Tb)":lambda x: x * 0.000007276,
            "terabyte(TB)":lambda x: x * 9.094947017 * 10**(-7),
            "terabyte(10^12 bytes)":lambda x: x * 0.000001, 
        },
        "gigabit(Gb)":{
            "gigabit(Gb)":lambda x: x,
            "bit":lambda x: x * 1073741824,
            "byte":lambda x: x * 134217728,
            "nibble":lambda x: x * 268435456,
            "character":lambda x: x * 134217728,
            "word":lambda x: x * 67108864,
            "kilobit(kb)":lambda x: x * 1048576,
            "kilobyte(kB)":lambda x: x * 131072,
            "kilobyte(10^3 bytes)":lambda x: x * 134217.728,
            "megabit(Mb)":lambda x: x * 1024,
            "megabyte(MB)":lambda x: x * 128,
            "megabyte(10^6 bytes)":lambda x: x * 134.217728,
            "gigabyte(GB)":lambda x: x * 0.125,
            "gigabyte(10^9 bytes)":lambda x: x * 0.134217728,
            "terabit(Tb)":lambda x: x * 0.0009765625,
            "terabyte(TB)":lambda x: x * 0.0001220703,
            "terabyte(10^12 bytes)":lambda x: x * 0.0001342177,
        },
        "gigabyte(GB)":{
            "gigabyte(GB)":lambda x: x,
            "bit":lambda x: x * 8589934592,
            "byte":lambda x: x * 1073741824,
            "nibble":lambda x: x * 2147483648,
            "character":lambda x: x * 1073741824,
            "word":lambda x: x * 536870912,
            "kilobit(kb)":lambda x: x * 8388608,
            "kilobyte(kB)":lambda x: x  * 1048576,
            "kilobyte(10^3 bytes)":lambda x: x * 1073741.824,
            "megabit(Mb)":lambda x: x * 8192,
            "megabyte(MB)":lambda x: x * 1024,
            "megabyte(10^6 bytes)":lambda x: x * 1073.741824,
            "gigabit(Gb)":lambda x: x * 8,
            "gigabyte(10^9 bytes)":lambda x: x * 1.073741824,
            "terabit(Tb)":lambda x: x * 0.0078125,
            "terabyte(TB)":lambda x: x * 0.0009765625,
            "terabyte(10^12 bytes)":lambda x: x * 0.0010737418,
        },
        "gigabyte(10^9 bytes)":{
            "gigabyte(10^9 bytes)":lambda x: x,
            "bit":lambda x: x * 8 * 10**(9),
            "byte":lambda x: x * 10**(9),
            "nibble":lambda x: x * 2 * 10**(9),
            "character":lambda x: x * 10**(9),
            "word":lambda x: x * 5 * 10**(8),
            "kilobit(kb)":lambda x: x * 7812500,
            "kilobyte(kB)":lambda x: x * 976562.5,
            "kilobyte(10^3 bytes)":lambda x: x * 1000000,
            "megabit(Mb)":lambda x: x * 7629.3945313,
            "megabyte(MB)":lambda x: x * 953.67431641,
            "megabyte(10^6 bytes)":lambda x: x * 1000,
            "gigabit(Gb)":lambda x: x * 7.4505805969,
            "gigabyte(GB)":lambda x: x * 0.9313225746,
            "terabit(Tb)":lambda x: x * 0.0072759576,
            "terabyte(TB)":lambda x: x * 0.0009094947,
            "terabyte(10^12 bytes)":lambda x: x * 0.001,
        },
        "terabit(Tb)":{
            "terabit(Tb)":lambda x: x,
            "bit":lambda x: x * 1099511627776,
            "byte":lambda x: x * 137438953472,
            "nibble":lambda x: x * 274877906944,
            "character":lambda x: x * 137438953472,
            "word":lambda x: x * 68719476736,
            "kilobit(kb)":lambda x: x * 1073741824,
            "kilobyte(kB)":lambda x: x * 134217728,
            "kilobyte(10^3 bytes)":lambda x: x * 137438953.47,
            "megabit(Mb)":lambda x: x * 1048576,
            "megabyte(MB)":lambda x: x * 131072,
            "megabyte(10^6 bytes)":lambda x: x * 137438.95347,
            "gigabit(Gb)":lambda x: x * 1024,
            "gigabyte(GB)":lambda x: x * 128,
            "gigabyte(10^9 bytes)":lambda x: x * 137.43895347,
            "terabyte(TB)":lambda x: x * 0.125,
            "terabyte(10^12 bytes)":lambda x: x * 0.1374389535,
        },
        "terabyte(TB)":{
            "terabyte(TB)":lambda x: x,
            "bit":lambda x: x * 8796093022208,
            "byte":lambda x: x * 1099511627776,
            "nibble":lambda x: x * 2199023255552,
            "character":lambda x: x * 1099511627776,
            "word":lambda x: x * 549755813888,
            "kilobit(kb)":lambda x: x * 8589934592,
            "kilobyte(kB)":lambda x: x * 1073741824,
            "kilobyte(10^3 bytes)":lambda x: x * 1099511627.8,
            "megabit(Mb)":lambda x: x * 8388608,
            "megabyte(MB)":lambda x: x * 1048576,
            "megabyte(10^6 bytes)":lambda x: x * 1099511.6278,
            "gigabit(Gb)":lambda x: x * 8192,
            "gigabyte(GB)":lambda x: x * 1024,
            "gigabyte(10^9 bytes)":lambda x: x * 1099.5116278,
            "terabit(Tb)":lambda x: x * 8,
            "terabyte(10^12 bytes)":lambda x: x * 1.0995116278,
        },
        "terabyte(10^12 bytes)":{
            "terabyte(10^12 bytes)":lambda x: x,
            "bit":lambda x: x * 8 * 10**(12),
            "byte":lambda x: x * 10**(12),
            "nibble":lambda x: x * 2 * 10**(12),
            "character":lambda x: x * 10**(12),
            "word":lambda x: x * 5 * 10**(11),
            "kilobit(kb)":lambda x: x * 7812500000,
            "kilobyte(kB)":lambda x: x * 976562500,
            "kilobyte(10^3 bytes)":lambda x: x * 10**(9),
            "megabit(Mb)":lambda x: x * 7629394.5313,
            "megabyte(MB)":lambda x: x * 953674.31641,
            "megabyte(10^6 bytes)":lambda x: x * 1000000,
            "gigabit(Gb)":lambda x: x * 7450.5805969,
            "gigabyte(GB)":lambda x: x * 931.32257462,
            "gigabyte(10^9 bytes)":lambda x: x * 1000,
            "terabit(Tb)":lambda x: x * 7.2759576142,
            "terabyte(TB)":lambda x: x * 0.9094947018,
        }
    }
}


 
if __name__ == "__main__":
    try:
        print("{0:.10f}".format(conversion_dict["length"]["meters"]["miles"](2)))
    except KeyError:
        pass
    for k in conversion_dict.keys():
        print(k.capitalize())
        print(tuple(conversion_dict[k].keys()))